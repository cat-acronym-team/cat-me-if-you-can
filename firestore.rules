rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /lobbies/{code} {
      allow get: if true;

      allow write: if true; // TODO: make an actual rule

      match /privatePlayers/{uid} {
        allow get: if request.auth.uid == uid;
      }

      match /promptAnswers/{uid} {
        function validAnswer() {
          return request.resource.data.answer is string
            && 0 < request.resource.data.answer.size() && request.resource.data.answer.size() <= 50
            && request.resource.data.answer == request.resource.data.answer.trim();
        }

        allow create: if request.auth.uid == uid && validAnswer() && request.resource.data.keys().hasOnly(['answer']);
      }

      match /chatRooms/{roomId} {
        allow read: if true;
        match /chatMessages/{messageId}{
          allow read: if true;
        }
      }
    }

    match /users/{userId} {
      function validateAttrs(){
        return request.resource.data.keys().hasOnly(['displayName', 'avatar'])
          && request.resource.data.displayName is string && request.resource.data.displayName.trim().size() >= 3 
          && request.resource.data.displayName.trim().size() <= 15 
          && request.resource.data.displayName.matches('[A-Za-z0-9-_]+')
          && request.resource.data.avatar is number && int(request.resource.data.avatar) == request.resource.data.avatar 
          && request.resource.data.avatar >= 0 && request.resource.data.avatar <=12;
      }

      // allows anyone to read that information
      allow read;
      allow create, update: if request.auth.uid == userId && validateAttrs();
    }
  }
}