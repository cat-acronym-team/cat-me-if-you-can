name: CI/CD

on:
  push:
  workflow_dispatch:

jobs:
  prettier:
    name: Prettier
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: npm
          cache-dependency-path: package-lock.json

      - name: Install Node Dependencies
        run: npm ci

      - name: Check Prettier
        run: npm run prettier

  lint-functions:
    name: Lint Functions
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: npm
          cache-dependency-path: functions/package-lock.json

      - name: Install Node Dependencies
        run: npm --prefix functions ci

      - name: Lint
        run: npm --prefix functions run lint

  test-functions:
    name: Test Functions
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: npm
          cache-dependency-path: functions/package-lock.json

      - name: Install Node Dependencies
        run: npm --prefix functions ci

      - name: Test
        run: npm --prefix functions run test

  build-functions:
    name: Build Functions
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: npm
          cache-dependency-path: functions/package-lock.json

      - name: Install Node Dependencies
        run: npm --prefix functions ci

      - name: Build
        run: npm --prefix functions run build

  lint-client:
    name: Lint Client
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: npm
          cache-dependency-path: client/package-lock.json

      - name: Install Node Dependencies
        run: npm --prefix client ci

      - name: Lint
        run: npm --prefix client run lint

  svelte-check:
    name: Svelte Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: npm
          cache-dependency-path: client/package-lock.json

      - name: Install Node Dependencies
        run: npm --prefix client ci

      - name: Check
        run: npm --prefix client run check

  build-client:
    name: Build Client
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: npm
          cache-dependency-path: client/package-lock.json

      - name: Install Node Dependencies
        run: npm --prefix client ci

      - name: Build
        run: npm --prefix client run build:prod

  playwright:
    name: Playwright
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: npm
          cache-dependency-path: |
            client/package-lock.json
            functions/package-lock.json

      - name: Install Java
        uses: actions/setup-java@v3
        with:
          distribution: "adopt"
          java-version: "11"

      - name: Get Playwright Version
        id: playwright-version
        run: echo "::set-output name=version::$(node -e "console.log(require('./client/package-lock.json').dependencies['@playwright/test'].version)")"

      - name: Cache Playwright
        uses: actions/cache@v3
        id: playwright-cache
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ steps.playwright-version.outputs.version }}

      - name: Install Node Dependencies
        run: |
          npm --prefix functions ci
          npm --prefix client ci

      - name: Install firebase emulators
        run: npm i -g firebase-tools

      - name: Install Playwright and it's Dependencies
        if: steps.playwright-cache.outputs.cache-hit != 'true'
        run: npx --prefix client playwright install --with-deps

      - name: Test
        run: npm --prefix client run test
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}

  deploy-staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/development'
    needs:
      [prettier, lint-functions, test-functions, build-functions, lint-client, svelte-check, build-client, playwright]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: npm
          cache-dependency-path: |
            client/package-lock.json
            functions/package-lock.json

      - name: Install Node Dependencies
        run: |
          npm --prefix functions ci
          npm --prefix client ci

      - name: Build Functions
        run: npm --prefix functions run build

      - name: Build Client
        run: npm --prefix client run build:stage

      - name: Install firebase
        run: npm i -g firebase-tools

      - name: Deploy
        run: firebase deploy --project stage --message "${{ github.event.head_commit.message }}"
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}

  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/production'
    needs:
      [prettier, lint-functions, test-functions, build-functions, lint-client, svelte-check, build-client, playwright]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: npm
          cache-dependency-path: |
            client/package-lock.json
            functions/package-lock.json

      - name: Install Node Dependencies
        run: |
          npm --prefix functions ci
          npm --prefix client ci

      - name: Build Functions
        run: npm --prefix functions run build

      - name: Build Client
        run: npm --prefix client run build:prod

      - name: Install firebase
        run: npm i -g firebase-tools

      - name: Deploy
        run: firebase deploy --project prod --message "${{ github.event.head_commit.message }}"
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
